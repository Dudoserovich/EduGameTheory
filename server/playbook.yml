---
- hosts: all
  gather_facts: true
  tasks:

    - name: "copy docker-compose.yml"
      copy:
        src: "../deployments/docker-compose-prod.yml"
        dest: "{{ APP_PATH }}/docker-compose.yml"
        owner: "{{ USER }}"
        group: "{{ GROUP }}"
        mode: 0644
      become: yes
      become_method: sudo

    - name: "create {{ APP_PATH }}/deployments"
      file:
        path: "{{ APP_PATH }}/deployments"
        owner: "{{ USER }}"
        group: "{{ GROUP }}"
        mode: 0775
      become: yes
      become_method: sudo

    - name: "copy default.conf"
      copy:
        src: "../deployments/default.conf"
        dest: "{{ APP_PATH }}/deployments/default.conf"
        owner: "{{ USER }}"
        group: "{{ GROUP }}"
        mode: 0644
      become: yes
      become_method: sudo

    - name: "stop services"
      shell: docker compose -f {{ APP_PATH }}/docker-compose.yml stop db backend backend-notifier

    - name: "login docker"
      shell: echo "{{ DOCKER_PASSWORD }}" | docker login ghcr.io -u "{{ DOCKER_LOGIN }}" --password-stdin

    - name: "pull images"
      shell: docker compose -f {{ APP_PATH }}/docker-compose.yml pull backend

    - name: "start services"
      shell: docker compose -f {{ APP_PATH }}/docker-compose.yml up -d db backend backend-notifier

#    - name: "create uploads/achievement"
#      shell: |
#        docker compose -f {{ APP_PATH }}/docker-compose.yml exec backend bash -c "mkdir -p public/uploads/achievement";

    - name: "set backend"
      shell: |
        docker compose -f {{ APP_PATH }}/docker-compose.yml exec backend bash -c "make set-backend";
