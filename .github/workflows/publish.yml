name: Publish server

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'backup/**'
      - 'docs/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'backup/**'
      - 'docs/**'

  workflow_dispatch:

env:
  PREFIX: ghcr.io/dudoserovich

jobs:

  check:
    name: Check changed files
    outputs:
      backend_service: ${{ steps.check_files.outputs.backend_service }}
      frontend_service: ${{ steps.check_files.outputs.frontend_service }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file; do
            echo $file
            if [[ $file == client/* ]]; then
              echo "::set-output name=frontend_service::true"
            elif [[ $file == server/* ]]; then
              echo "::set-output name=backend_service::true"
            else
              echo "file does not belong to any service"
            fi
          done < files.txt

  backend_service:
    needs: [check]
    if: needs.check.outputs.backend_service == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: sudo docker build ./server -t egt_backend

      - name: Login to GitHub container Registry
        run: echo "${{ secrets.PACKAGES_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Post image to github packages
        run: |
          IMAGE_ID=$PREFIX/egt_backend
          VERSION=${GITHUB_SHA::7}
          docker tag egt_backend $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  frontend_service:
    needs: [check]
    if: needs.check.outputs.frontend_service == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: sudo docker build ./client -t egt_frontend

      - name: Login to GitHub container Registry
        run: echo "${{ secrets.PACKAGES_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Post image to github packages
        run: |
          IMAGE_ID=$PREFIX/egt_frontend
          VERSION=${GITHUB_SHA::7}
          docker tag egt_frontend $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
  send_telegram:
      needs: [backend_service, frontend_service]
      if: ${{ !cancelled() && (success() || failure() || needs.backend_service.result == 'skipped' || needs.frontend_service.result == 'skipped') }}
      runs-on: ubuntu-latest
      steps:
      
      - name: Test statuses
        run: |
          echo ${{ job.backend_service.status }}
          echo ${{ job.frontend_service.status }}
      
      - name: Send error status message
        if: ${{ needs.backend_service.result == 'failure' || needs.frontend_service.result == 'failure' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Во время сборки контейнеров что-то сломалось (активизатор сборки ${{ github.actor }}):            
            
            Action: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            
      - name: Send success status message
        if: ${{ needs.backend_service.result != 'failure' && needs.frontend_service.result != 'failure' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ура, контейнеры удачно собрались или не было затрагивающих их изменений (активизатор сборки ${{ github.actor }}):            
            Repository: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
